----- STANFORD SQL COURSE EXERCISES -----

---- 1. SQL Movie-Rating Query Exercises ----
/* 
We have 3 tables:
Movie ( mID, title, year, director )
Reviewer ( rID, name )
Rating ( rID, mID, stars, ratingDate )
*/

-- Q1: Find the titles of all movies directed by Steven Spielberg.

SELECT title
FROM Movie 
WHERE director = 'Steven Spielberg'


-- Q2: Find all years that have a movie that received a rating of 4 or 5, 
-- and sort them in increasing order.

SELECT DISTINCT M.year
FROM Movie M 
JOIN Rating R ON M.mID = R.mID
WHERE R.stars = 4 or R.stars = 5
ORDER BY M.year ASC


-- Q3: Find the titles of all movies that have no ratings.

SELECT M.title  
FROM Movie M 
LEFT JOIN Rating R ON M.mID = R.mID
WHERE R.mID is NULL 


-- Q4: Some reviewers didn't provide a date with their rating. Find the 
-- names of all reviewers who have ratings with a NULL value for the date.

SELECT Re.name 
FROM Reviewer Re 
JOIN Rating Ra ON Re.rID = Ra.rID
WHERE Ra.ratingDate is NULL


-- Q5: Write a query to return the ratings data in a more readable format: 
-- reviewer name, movie title, stars, and ratingDate. Also, sort the data, 
-- first by reviewer name, then by movie title, and lastly by number of stars.

SELECT Re.name as 'reviewer name', M.title as 'movie title', Ra.stars as stars, Ra.ratingDate as ratingDate 
FROM Reviewer Re
JOIN Rating Ra ON Ra.rID = Re.rID
JOIN Movie M ON M.mID = Ra.mID
ORDER BY Re.name, M.title, Ra.stars


-- Q6: For all cases where the same reviewer rated the same movie twice and 
-- gave it a higher rating the second time, return the reviewer's name and the title of the movie.

SELECT Re.name, M.title
FROM Movie M 
JOIN Rating Ra1 using(mID)
JOIN Rating Ra2 using(rID)
JOIN Reviewer Re using(rID)
WHERE Ra1.ratingDate < Ra2.ratingDate and Ra1.stars < Ra2.stars and Ra1.mID = Ra2.mID


-- Q7: For each movie that has at least one rating, find the highest number of stars 
-- that movie received. Return the movie title and number of stars. Sort by movie title.

SELECT M.title, max(Ra.stars) 
FROM Movie M 
JOIN Rating Ra ON Ra.mID = M.mID
GROUP BY M.title
ORDER BY M.title


-- Q8: For each movie, return the title and the 'rating spread', that is, the difference 
-- between highest and lowest ratings given to that movie. Sort by rating spread from 
-- highest to lowest, then by movie title.

SELECT M.title, (max(Ra.stars) - min(Ra.stars)) AS rating_spread
FROM Movie M
JOIN Rating Ra ON Ra.mID = M.mID
GROUP BY M.mID
ORDER BY rating_spread DESC, M.title ASC


-- Q9: Find the difference between the average rating of movies released before 1980 and 
-- the average rating of movies released after 1980. (Make sure to calculate the average 
-- rating for each movie, then the average of those averages for movies before 1980 and 
-- movies after. Don't just calculate the overall average rating before and after 1980.)

SELECT AVG(Before1980.avg) - AVG(After1980.avg)
FROM (SELECT AVG(Ra.stars) AS avg
      FROM Movie M
      JOIN Rating Ra USING(mId)
      WHERE M.year < 1980
      GROUP BY M.mId) AS Before1980, 
      (SELECT AVG(Ra.stars) AS avg
      FROM Movie M
      JOIN Rating Ra USING(mId)
      WHERE M.year > 1980
      GROUP BY M.mId) AS After1980;